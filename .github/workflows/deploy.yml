name: Deploy Flask App

on:
  push:
    branches:
      - main  # Runs this workflow when code is pushed to main

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Croclurksintheswamp333
          POSTGRES_DB: anthizo_healthcare
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set Flask Environment Variables
      run: |
        echo "FLASK_APP=app.py" >> $GITHUB_ENV
        echo "FLASK_ENV=production" >> $GITHUB_ENV
        echo "DATABASE_URL=postgresql://postgres:Croclurksintheswamp333@localhost:5432/anthizo_healthcare" >> $GITHUB_ENV

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..10}; do
          if pg_isready -h localhost -U postgres; then
            echo "PostgreSQL is ready!"
            break
          fi
          echo "Waiting for PostgreSQL to start..."
          sleep 5
        done

    - name: Deploy Flask App (Local Server)
      env:
        FLASK_APP: app.py
        FLASK_ENV: production
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/anthizo_healthcare
      run: |
        flask db upgrade  # Apply database migrations
        nohup flask run --host=0.0.0.0 --port=5000 &
